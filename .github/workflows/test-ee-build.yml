---
name: Test Execution Environment Build

on:
  push:
    branches:
      - main
    paths:
      - 'examples/execution-environment/**'
      - 'plugins/**'
      - '.github/workflows/test-ee-build.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'examples/execution-environment/**'
      - 'plugins/**'
      - '.github/workflows/test-ee-build.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  test-ee-build:
    name: Build and Test Execution Environment
    runs-on: ubuntu-latest

    strategy:
      matrix:
        base_image:
          - name: CentOS Stream 9
            config: execution-environment-centos.yml
            tag: test-ee-centos:latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install ansible-builder and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-builder ansible-core

      - name: Build the collection tarball
        id: build-collection
        uses: ./.github/actions/build-collection
        with:
          working-directory: ${{ github.workspace }}

      - name: Copy collection tarball to EE directory
        run: |
          cp ${{ github.workspace }}/kush_gupt-minimal_collection-*.tar.gz ./
          ls -lh kush_gupt-minimal_collection-*.tar.gz
        working-directory: ${{ github.workspace }}/examples/execution-environment

      - name: Create temporary requirements.yml for local collection
        run: |
          # Find the exact tarball filename (in current directory)
          TARBALL=$(basename $(ls kush_gupt-minimal_collection-*.tar.gz))
          echo "Found tarball: ${TARBALL}"

          cat > requirements-local.yml <<EOF
          ---
          collections:
            - name: ${TARBALL}
              type: file
          EOF
          cat requirements-local.yml
        working-directory: ${{ github.workspace }}/examples/execution-environment

      - name: Update EE config to use local collection
        run: |
          sed -i 's|galaxy: requirements.yml|galaxy: requirements-local.yml|' ${{ matrix.base_image.config }}
          cat ${{ matrix.base_image.config }}
        working-directory: ${{ github.workspace }}/examples/execution-environment

      - name: Build execution environment - ${{ matrix.base_image.name }}
        run: |
          # First, create the build context
          ansible-builder create \
            --file ${{ matrix.base_image.config }} \
            --verbosity 3

          # Copy the tarball into the build context
          cp kush_gupt-minimal_collection-*.tar.gz context/_build/

          # Now build the container image
          ansible-builder build \
            --file ${{ matrix.base_image.config }} \
            --tag ${{ matrix.base_image.tag }} \
            --container-runtime podman \
            --verbosity 3
        working-directory: ${{ github.workspace }}/examples/execution-environment

      - name: Verify the EE image was created
        run: |
          podman images
          podman images ${{ matrix.base_image.tag }} --format "{{.Repository}}:{{.Tag}}"

      - name: Test collection is installed in EE
        run: |
          echo "Checking for collection in execution environment..."
          podman run --rm ${{ matrix.base_image.tag }} ansible-galaxy collection list

          echo ""
          echo "Verifying kush_gupt.minimal_collection is present..."
          podman run --rm ${{ matrix.base_image.tag }} \
            ansible-galaxy collection list | grep -q "kush_gupt.minimal_collection" && \
            echo "✅ Collection found!" || \
            (echo "❌ Collection not found!" && exit 1)

      - name: Test module documentation
        run: |
          echo "Testing sysctl module documentation..."
          podman run --rm ${{ matrix.base_image.tag }} \
            ansible-doc kush_gupt.minimal_collection.sysctl | head -20

          echo ""
          echo "Testing ini_file module documentation..."
          podman run --rm ${{ matrix.base_image.tag }} \
            ansible-doc kush_gupt.minimal_collection.ini_file | head -20

      - name: Run test playbook in EE
        run: |
          echo "Running test playbook inside execution environment..."
          podman run --rm \
            -v ${{ github.workspace }}/examples/execution-environment/test-playbook.yml:/runner/project/test-playbook.yml:Z \
            ${{ matrix.base_image.tag }} \
            ansible-playbook /runner/project/test-playbook.yml

      - name: Display EE information
        run: |
          echo "=== Execution Environment Details ==="
          echo "Image: ${{ matrix.base_image.tag }}"
          echo ""

          echo "=== Ansible Version ==="
          podman run --rm ${{ matrix.base_image.tag }} ansible --version

          echo ""
          echo "=== Python Version ==="
          podman run --rm ${{ matrix.base_image.tag }} python3 --version

          echo ""
          echo "=== Installed Collections ==="
          podman run --rm ${{ matrix.base_image.tag }} ansible-galaxy collection list

          echo ""
          echo "=== Image Size ==="
          podman images ${{ matrix.base_image.tag }} --format "Size: {{.Size}}"

      - name: Save build logs as artifact
        if: always()
        run: |
          mkdir -p build-logs
          podman images > build-logs/images.txt
          podman run --rm ${{ matrix.base_image.tag }} ansible-galaxy collection list > build-logs/collections.txt || true
          podman run --rm ${{ matrix.base_image.tag }} ansible --version > build-logs/ansible-version.txt || true
        continue-on-error: true

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ee-build-logs-${{ matrix.base_image.name }}
          path: build-logs/
          retention-days: 7
        continue-on-error: true

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate image metadata
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/minimal-collection-ee-centos
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-

      - name: Tag and push to GHCR
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          # Read tags line by line and push each one
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
            if [ -n "$tag" ]; then
              echo "Tagging and pushing: ${tag}"
              podman tag ${{ matrix.base_image.tag }} "${tag}"
              podman push "${tag}"
            fi
          done
          echo "✅ Successfully pushed execution environment to GHCR"

      - name: Clean up
        if: always()
        run: |
          # Clean up container images
          podman rmi ${{ matrix.base_image.tag }} || true
          podman system prune -f || true

          # Clean up temporary files in EE directory
          cd ${{ github.workspace }}/examples/execution-environment
          rm -f kush_gupt-minimal_collection-*.tar.gz requirements-local.yml || true
